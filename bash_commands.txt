############ history ############
#По умолчанию все пишиться в файл ~/.bash_history, а его размер — 500 команд.
#Если хотим хранить историю в другом файле, то нужно в .bashrc, задать команду HISTFILE=~/.my_history.
#HISTSIZE — определяет число строк, хранящихся в списке истории (в памяти интерпретатора).
#HISTFILESIZE — максимальное количество команд хранящихся в файле истории.
#Если интересует больше записей, по можно поменять под себя:
$ export HISTSIZE=1000
$ export HISTFILESIZE=1000

$ !282 # повторение определенной комманды под номером 282
#!! — ссылается на предыдущую команду;
#!n — ссылается на команду под номером n;
#!-n — ссылается на команду по номером „текущая минус n“;
#history -c — очистить историю команд, удалив все записи
#history -d n — удалить из истории запись под номером n
#history -a — дописать команды, введенные в текущей сессии bash, в конец файла $HISTFILE
#Так же можно сохранить дату и время для каждой команды в истории, для этого в конец .bashrc дописываем:
$ nano .bashrc
export HISTTIMEFORMAT=»%h/%d-%H:%M:%S «
#и применяем изменений в .bashrc без перезапуска сеанса/системы делаем командой
$ bash
#Получаем :
$ history 3
147 Aug/11 — 11:05:28 sudo aptitude install gspca-source
148 Aug/11 — 11:07:23 cd /lib/modules/2.6.32-22-generic/
149 Aug/11 — 11:11:08 modprobe gspca
###############################

############ uname ############
uname - options
    -s, ( –kernel-name) – печатает имя ядра.
    -n, ( –nodename) – печатает имя узла системы (имя хоста). Это имя, которое система использует при общении по сети. При использовании с опцией -n uname показывает тот же вывод, что и команда hostname.
    -r, ( –kernel-release) – печатает выпуск ядра.
    -v, ( –kernel-version) – печатает версию ядра.
    -m, ( –machine) – печатает название аппаратного имени аппарата.
    -p, ( –processor) – печатает архитектуру процессора.
    -i, ( –hardware-platform) – печатает аппаратной платформы.
    -o, ( –operating-system) – распечатает название операционной системы. В системах Linux это «GNU/Linux»
    -a, ( –all) – при использовании опции -a uname ведет себя так же, как если бы  были заданы опции -snrvmo.

При вызове без каких-либо параметров uname печатает имя ядра, как если бы был указан параметр -s.
###############################
#Создание файлов
touch file.txt
>file.txt
>folder/file2.txt

rm file.txt
echo 
echo "some text" > file.txt
echo y | rm file.txt
#ifconfig  устаревшая комманда ее лучше не использовать, используй  комманду ip 

cat big-text | more
cat file.txt |grep "555-555"
less big-text 

logout
exit
reboot
halt
poweroff
shutdown -h now - r now


clear


ps aux


ip a


###############################
mkdir -p subdir/somedir/mydir
mkdir mydir1 mydir2 mydir3



############ df ############
df -hi  
df -h
###############################

############ du ############


###############################

############ free ############


###############################
/mnt
/dev






























############ grep ############

grep -f ./file1 -vFx ./file2
Получаем на выходе все строки из файла file2, которых нет в file1. Строки которые есть в file1 не выводятся, соответственно.

grep -f ./file1 -Fx ./file2
Получаем пересечение строк из file1 и file2

############################### ГРЕПАТЬ ПОТОКОВЫЙ ВЫВОД ###############################
tail -f /var/log/some.log | grep --line-buffered foo | grep bar


### ПОИСК В АРХИВЕ ###
zgrep "46.53.178.177" custom_log.1.gz | egrep -o "2017:[0-9]+:[0-9]+:[0-9]+" | sort | uniq -c | sort -nr | head -10


############ netstat ##########
ss -l 
Смотреть список открытых интерфейсов


########## split #############
split  --numeric-suffixes --lines=150000 --verbose uniq_all+ua_key_iteration2.json uniq_all+ua_key_iteration2_part_


############## SVN REVERT ###################
svn st | grep  "^D" | awk '{print $2}' | xargs svn revert
или
svn st | grep  "^D" | grep  " C " | awk '{print $3}' | xargs svn revert


############## REDIS ###################
Удалить по префиксу:
redis-cli KEYS "api:GetUrlInfo:*" | xargs redis-cli DEL
redis-cli KEYS "block:footer:*" | xargs redis-cli DEL